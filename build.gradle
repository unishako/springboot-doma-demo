plugins {
	id 'org.springframework.boot' version '2.2.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.github.unishako'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	launchScript()
}

// テンポラリディレクトリのパスを定義する
ext.domaResourcesDir = "${buildDir}/tmp/doma-resources"

// domaが注釈処理で参照するリソースをテンポラリディレクトリに抽出
task extractDomaResources(type: Copy, dependsOn: processResources)  {
	from processResources.destinationDir
	include 'doma.compile.config'
	include 'META-INF/**/*.sql'
	include 'META-INF/**/*.script'
	into domaResourcesDir
}

// テンポラリディレクトリ内のリソースをcompileJavaタスクの出力先ディレクトリにコピーする
task copyDomaResources(type: Copy, dependsOn: extractDomaResources)  {
	from domaResourcesDir
	into compileJava.destinationDir
}

compileJava {
	// 上述のタスクに依存させる
	dependsOn copyDomaResources
	// テンポラリディレクトリをcompileJavaタスクの入力ディレクトリに設定する
	inputs.dir domaResourcesDir
	options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
	// テストの実行時は注釈処理を無効にする
	options.compilerArgs = ['-proc:none']
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.2.1'
	implementation 'org.seasar.doma:doma:2.26.0'
	annotationProcessor 'org.seasar.doma:doma:2.26.0'
	implementation 'com.github.rozidan:modelmapper-spring-boot-starter:2.3.1'
	implementation 'com.google.guava:guava:28.2-jre'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
